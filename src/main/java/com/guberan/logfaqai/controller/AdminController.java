package com.guberan.logfaqai.controller;

import com.guberan.logfaqai.dto.ValidationRequest;
import com.guberan.logfaqai.model.Question;
import com.guberan.logfaqai.repository.QuestionRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/admin/questions")
@RequiredArgsConstructor
//@PreAuthorize("hasAuthority('SCOPE_admin')")
@PreAuthorize("hasRole('ADMIN')")
public class AdminController {

    private final QuestionRepository questionRepository;

    @GetMapping
    public List<Question> getQuestions(@RequestParam(defaultValue = "false") boolean validated) {
        return questionRepository.findByValidated(validated);
    }

    @PostMapping("/{id}/validate")
    public ResponseEntity<String> validateResponse(@PathVariable Long id, @RequestBody ValidationRequest request) {
        return questionRepository.findById(id)
                .map(question -> {
                    question.setAnswer(request.getCorrectedAnswer());
                    question.setValidated(true);
                    question.setAutoGenerated(false);
                    questionRepository.save(question);
                    return ResponseEntity.ok("Question validated.");
                })
                .orElseGet(() -> ResponseEntity.notFound().build());
    }
}